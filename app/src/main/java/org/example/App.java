/*
 * This source file was generated by the Gradle 'init' task
 */

package org.example;

import java.util.Arrays;

public class App {
    public static void main(String[] args) {
        System.out.println("Running all test scenarios below:\n");

        // diff arrays to cover edge cases and tricky inputs
        int[] normal = { 3, -2, 7, 0, 5 };
        int[] allSame = { 4, 4, 4, 4 };
        int[] onlyNeg = { -5, -1, -10, -3 };
        int[] mixPosNeg = { -5, 0, 5 };
        int[] increasing = { 1, 2, 3, 4, 5 };
        int[] decreasing = { 9, 7, 5, 3, 1 };
        int[] oneElement = { 42 };
        int[] zeroes = { 0, 0, 0, 0 };
        int[] empty = {}; // empty array edge case

        ForLoopFunctions loops = new ForLoopFunctions();
        StreamFunctions streams = new StreamFunctions();
        ArrayOperations arrayOps = new ArrayOperations();

        // run all tests comparing loop and stream results
        runStats("Normal", normal, loops, streams);
        runStats("All Same", allSame, loops, streams);
        runStats("Only Negatives", onlyNeg, loops, streams);
        runStats("Mix Positive and Negative", mixPosNeg, loops, streams);
        runStats("Increasing Sequence", increasing, loops, streams);
        runStats("Decreasing Sequence", decreasing, loops, streams);
        runStats("Single Element", oneElement, loops, streams);
        runStats("All Zeroes", zeroes, loops, streams);

        // empty array is tricky for loops, so only test streams here
        System.out.println("\nempty array (edge case):");
        System.out.println("stream max: " + streams.maximum(empty));
        System.out.println("stream min: " + streams.minimum(empty));
        System.out.println("stream sum: " + streams.sum(empty));
        System.out.println("stream avg: " + streams.average(empty));

        // add-on functions testing from ArrayOperations class with edge cases
        System.out.println("\nadd-on tests with normal array:");
        int[] raw = { 3, -2, 7, 0, 5 };
        System.out.println("original: " + Arrays.toString(raw));
        System.out.println("evens only: " + Arrays.toString(arrayOps.evensOnly(raw)));
        System.out.println("odds only: " + Arrays.toString(arrayOps.oddsOnly(raw)));
        System.out.println("add five: " + Arrays.toString(arrayOps.addFive(raw)));
        System.out.println("squared: " + Arrays.toString(arrayOps.squareNumbers(raw)));

        System.out.println("\ntesting add-on with empty array:");
        System.out.println("evens only: " + Arrays.toString(arrayOps.evensOnly(empty)));
        System.out.println("odds only: " + Arrays.toString(arrayOps.oddsOnly(empty)));
        System.out.println("add five: " + Arrays.toString(arrayOps.addFive(empty)));
        System.out.println("squared: " + Arrays.toString(arrayOps.squareNumbers(empty)));

        System.out.println("\nadd-on tests with all negative numbers:");
        System.out.println("original: " + Arrays.toString(onlyNeg));
        System.out.println("evens only: " + Arrays.toString(arrayOps.evensOnly(onlyNeg)));
        System.out.println("odds only: " + Arrays.toString(arrayOps.oddsOnly(onlyNeg)));
        System.out.println("add five: " + Arrays.toString(arrayOps.addFive(onlyNeg)));
        System.out.println("squared: " + Arrays.toString(arrayOps.squareNumbers(onlyNeg)));
    }

    // helper method to run and print results for both methods side by side
    private static void runStats(String label, int[] nums, ForLoopFunctions loops, StreamFunctions streams) {
        System.out.println("\n" + label + ":");
        System.out.println("array: " + Arrays.toString(nums));

        // for loop results
        System.out.println("loop max: " + loops.maximum(nums));
        System.out.println("loop min: " + loops.minimum(nums));
        System.out.println("loop sum: " + loops.sum(nums));
        System.out.println("loop avg: " + loops.average(nums));

        // stream results
        System.out.println("stream max: " + streams.maximum(nums));
        System.out.println("stream min: " + streams.minimum(nums));
        System.out.println("stream sum: " + streams.sum(nums));
        System.out.println("stream avg: " + streams.average(nums));
    }
}
